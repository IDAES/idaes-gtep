name: GitHub Branch CI

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Hash (Optional)
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    # -l: login shell, needed when using Conda run:
    shell: bash -l {0}

jobs:
  code-formatting:
    name: Check code formatting (Black)
    # OS and/or Python version don't make a difference, so we choose ubuntu and 3.10 for performance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Black
        # unlike the other jobs, we don't need to install IDAES and/or all the dev dependencies,
        # but we still want to specify the Black version to use in requirements-dev.txt for local development
        # so we extract the relevant line and pass it to a simple `pip install`
        run: |
          pip install black
      - name: Run Black to verify that the committed code is formatted
        run: |
          black --check .

  spell-check:
    name: Check Spelling
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Run Spell Checker
        uses: crate-ci/typos@master
        with: 
          config: ./.github/workflows/typos.toml

  build:
    name: ${{ matrix.os }}/${{ matrix.python }}
    needs: [code-formatting, spell-check]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        os: [ubuntu-latest, windows-latest]
        python: [3.9, '3.10', '3.11']
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      # - name: Set up Python ${{ matrix.python }}
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ matrix.python }}
      # - name: Install Python Packages (pip)
      #   shell: bash # DO NOT REMOVE: see note above
      #   run: |
      #     pip install scipy
          
      #     python -c 'import sys; print("PYTHON_EXE=%s" \
      #         % (sys.executable,))' >> $GITHUB_ENV
      #     echo ""
      #     echo "Final pip environment:"
      #     python -m pip list | sed 's/^/    /'
      
      - name: Set up Conda environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python }}
      - name: Intall Python packages (conda)
        run: |
          # Set up environment
          conda config --set always_yes yes
          conda config --set auto_update_conda false
          conda config --remove channels defaults
          conda config --append channels nodefaults
          conda config --append channels conda-forge
         
          # Print environment info
          echo "*** CONDA environment: ***"
          conda info
          conda config --show-sources
          conda config --show channels
          conda list --show-channel-urls
          which python
          python --version
          
          echo "Install Python packages"
          conda install --yes --quiet pip setuptools wheel
          conda install --yes --quiet scipy pyomo pytest highspy
          
          # remember this python interpreter
          python -c 'import sys; print("PYTHON_EXE=%s" \
              % (sys.executable,))' >> $GITHUB_ENV
          
          echo "Final conda environment:"
          conda list | sed 's/^/    /'

      #- name: Install Pyomo
      #  run: |
      #    pip install pyomo
      - name: Install idaes-gtep
        run: |
          python setup.py develop
      - name: Run Tests
        run: |
          #pip install pytest
          #pip install highspy
          pytest -v gtep
          
